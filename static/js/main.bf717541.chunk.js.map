{"version":3,"sources":["Components/header_bar.js","Components/History.js","Components/bot_lists.js","Components/bot_details.js","Components/routes.js","App.js","reportWebVitals.js","Redux/reducer.js","index.js"],"names":["Header","className","id","this","props","cartCount","Component","connect","state","history","BotDetails","bots","map","bot","index","indexvalue","cagr","onClick","item","push","addCart","cart","dispatch","type","payload","Product","selectedBot","description","style","fontWeight","Routes","path","exact","component","BotLists","bot_details","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducers","action","store","createStore","rootReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bf717541.chunk.js","sourcesContent":["import { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"header\">\r\n          <div id=\"dashboard\" >Dashboard</div>\r\n          <div id=\"cart\">Cart - <span>{this.props.cartCount}</span></div>\r\n        </div>\r\n        <div className=\"line\"></div>\r\n        <hr />\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    cartCount: state.cartCount\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(Header);","import { createBrowserHistory as history} from 'history';\r\n\r\nexport default history();","import { Component } from \"react\";\r\nimport history from './History.js';\r\nimport { connect } from \"react-redux\";\r\nclass BotDetails extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <p>select the best algo suited for your needs</p>\r\n                {this.props.bots.map((bot, index) => {\r\n                    return (<div>\r\n                        <div className=\"table\">\r\n                            <div className=\"column1\">{bot.bot}</div>\r\n                            <div className=\"column2\"><span id=\"colT\">Index Value</span><br />\r\n                                <span id=\"colV\">{bot.indexvalue}</span></div>\r\n                            <div className=\"column3\" ><span id=\"colT\">CAGR</span>\r\n                                <br /><span id=\"colP\">{bot.cagr}</span></div>\r\n                            <div className=\"column4\"><button onClick={() => { this.props.item(index); history.push('/bot-details/id:'+(bot.id)) }}>View algo</button><br />\r\n                                <button onClick={() => this.props.addCart(bot.id)}>Buy</button></div>\r\n                        </div>\r\n                        <hr />\r\n                    </div>\r\n                    )\r\n                })};\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        bots: state.bots,\r\n        cart: state.cart\r\n    };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addCart: () => { dispatch({ type: 'ADD_CART' }) },\r\n        item: (index) => { dispatch({ type: 'EACH_DATA', payload: index }) }\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BotDetails);","import { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nclass Product extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"productBox\">\r\n                <div className=\"productName\">\r\n                    <h5>{this.props.selectedBot.bot}</h5>\r\n                    <p>{this.props.selectedBot.description}</p>\r\n                    <button id=\"riskbtn\">ModerateRisk</button>\r\n                    <button id=\"buybtn\" onClick={() => this.props.addCart()}>Buy</button>\r\n                </div>\r\n                <div className=\"productval\">\r\n                    <span id=\"colT\">Index Value</span><br />\r\n                    <span id=\"colV\" style={{ fontWeight: \"bold\" }}>{this.props.selectedBot.indexvalue}</span>\r\n                </div>\r\n                <div className=\"productper\">\r\n                    <span id=\"colT\">CAGR</span>\r\n                    <br /><span id=\"colP\" style={{ fontWeight: \"bold\" }}>{this.props.selectedBot.cagr}</span>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        bots: state.bots,\r\n        cart: state.cart,\r\n        selectedBot: state.selectedBot\r\n    };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addCart: () => { dispatch({ type: 'ADD_CART' }) }\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Product);","import React, { Component } from \"react\";\r\nimport { Router, Route } from \"react-router-dom\";\r\nimport BotLists from './bot_lists.js';\r\nimport history from './History.js';\r\nimport bot_details from \"./bot_details.js\";\r\nclass Routes extends Component {\r\n    render() {\r\n        return (\r\n            <Router history={history}>\r\n                <switch>\r\n                    <Route path=\"/\" exact component={BotLists} />\r\n                    <Route path=\"/bot-details/:id\" component={bot_details} />\r\n                </switch>\r\n            </Router>\r\n        )\r\n    }\r\n}\r\nexport default Routes;","import './App.css';\nimport Header from './Components/header_bar.js';\nimport Routes from './Components/routes.js';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Component } from 'react';\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <Header />\n          <Routes />\n        </div>\n      </Router>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\r\n    bots: [\r\n        {\r\n            id: 1,\r\n            bot: \"Hot Bot\",\r\n            description: \"Hot bot is low volatility portfolio of growth stocks selected based on our proprietary metrics\",\r\n            indexvalue: 289.34,\r\n            cagr: \"22.63%\"\r\n        },\r\n        {\r\n            id: 2,\r\n            bot: \"Cool Bot\",\r\n            description: \"Cool bot is low volatility portfolio of growth stocks selected based on our proprietary metrics\",\r\n            indexvalue: 439.34,\r\n            cagr: \"36.02%\"\r\n        },\r\n        {\r\n            id: 3,\r\n            bot: \"Options Bot\",\r\n            description: \"Options bot is low volatility portfolio of growth stocks selected based on our proprietary metrics\",\r\n            indexvalue: 139.34,\r\n            cagr: \"28.54%\"\r\n        }\r\n\r\n\r\n    ],\r\n    cartCount: 0,\r\n    selectedBot: {}\r\n};\r\nconst rootReducers = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"ADD_CART\":\r\n            return {\r\n                ...state,\r\n                cartCount: state.cartCount + 1\r\n            };\r\n        case \"EACH_DATA\":\r\n            return {\r\n                ...state,\r\n                selectedBot: state.bots[action.payload]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default rootReducers;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { createStore } from \"redux\";\nimport rootReducer from \"./Redux/reducer\";\n\nconst store = createStore(rootReducer);\nReactDOM.render(\n  <Provider store={store} >\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}